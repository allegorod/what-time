const phoneInput = document.getElementById('phoneInput');
const result = document.getElementById('result');
const errorDiv = document.getElementById('error');
const flagDiv = document.getElementById('flag');
const countryDiv = document.getElementById('country');
const timeDiv = document.getElementById('time');
const timezoneDiv = document.getElementById('timezone');

// Country flags mapping
const countryFlags = {
    'RU': 'üá∑üá∫', 'US': 'üá∫üá∏', 'GB': 'üá¨üáß', 'DE': 'üá©üá™', 'FR': 'üá´üá∑', 'IT': 'üáÆüáπ', 'ES': 'üá™üá∏',
    'UA': 'üá∫üá¶', 'BY': 'üáßüáæ', 'KZ': 'üá∞üáø', 'CN': 'üá®üá≥', 'JP': 'üáØüáµ', 'KR': 'üá∞üá∑', 'IN': 'üáÆüá≥',
    'BR': 'üáßüá∑', 'AU': 'üá¶üá∫', 'CA': 'üá®üá¶', 'MX': 'üá≤üáΩ', 'AR': 'üá¶üá∑', 'TR': 'üáπüá∑', 'SA': 'üá∏üá¶',
    'AE': 'üá¶üá™', 'IL': 'üáÆüá±', 'EG': 'üá™üá¨', 'ZA': 'üáøüá¶', 'NG': 'üá≥üá¨', 'KE': 'üá∞üá™', 'TH': 'üáπüá≠',
    'VN': 'üáªüá≥', 'PH': 'üáµüá≠', 'ID': 'üáÆüá©', 'MY': 'üá≤üáæ', 'SG': 'üá∏üá¨', 'PL': 'üáµüá±', 'NL': 'üá≥üá±',
    'BE': 'üáßüá™', 'AT': 'üá¶üáπ', 'CH': 'üá®üá≠', 'SE': 'üá∏üá™', 'NO': 'üá≥üá¥', 'DK': 'üá©üá∞', 'FI': 'üá´üáÆ',
    'PT': 'üáµüáπ', 'GR': 'üá¨üá∑', 'CZ': 'üá®üáø', 'RO': 'üá∑üá¥', 'HU': 'üá≠üá∫', 'BG': 'üáßüá¨', 'RS': 'üá∑üá∏',
    'HR': 'üá≠üá∑', 'SK': 'üá∏üá∞', 'SI': 'üá∏üáÆ', 'LT': 'üá±üáπ', 'LV': 'üá±üáª', 'EE': 'üá™üá™', 'IE': 'üáÆüá™',
    'NZ': 'üá≥üáø', 'CL': 'üá®üá±', 'CO': 'üá®üá¥', 'PE': 'üáµüá™', 'VE': 'üáªüá™', 'EC': 'üá™üá®', 'UY': 'üá∫üáæ',
    'PY': 'üáµüáæ', 'BO': 'üáßüá¥', 'CR': 'üá®üá∑', 'PA': 'üáµüá¶', 'GT': 'üá¨üáπ', 'HN': 'üá≠üá≥', 'SV': 'üá∏üáª',
    'NI': 'üá≥üáÆ', 'DO': 'üá©üá¥', 'CU': 'üá®üá∫', 'JM': 'üáØüá≤', 'TT': 'üáπüáπ', 'BS': 'üáßüá∏', 'BB': 'üáßüáß',
    'PK': 'üáµüá∞', 'BD': 'üáßüá©', 'LK': 'üá±üá∞', 'NP': 'üá≥üáµ', 'AF': 'üá¶üá´', 'IR': 'üáÆüá∑', 'IQ': 'üáÆüá∂',
    'SY': 'üá∏üáæ', 'LB': 'üá±üáß', 'JO': 'üáØüá¥', 'KW': 'üá∞üáº', 'QA': 'üá∂üá¶', 'BH': 'üáßüá≠', 'OM': 'üá¥üá≤',
    'YE': 'üáæüá™', 'AM': 'üá¶üá≤', 'AZ': 'üá¶üáø', 'GE': 'üá¨üá™', 'UZ': 'üá∫üáø', 'TM': 'üáπüá≤', 'KG': 'üá∞üá¨',
    'TJ': 'üáπüáØ', 'MN': 'üá≤üá≥', 'MM': 'üá≤üá≤', 'LA': 'üá±üá¶', 'KH': 'üá∞üá≠', 'BN': 'üáßüá≥', 'MV': 'üá≤üáª',
    'DZ': 'üá©üáø', 'MA': 'üá≤üá¶', 'TN': 'üáπüá≥', 'LY': 'üá±üáæ', 'SD': 'üá∏üá©', 'ET': 'üá™üáπ', 'GH': 'üá¨üá≠',
    'CI': 'üá®üáÆ', 'SN': 'üá∏üá≥', 'CM': 'üá®üá≤', 'UG': 'üá∫üá¨', 'TZ': 'üáπüáø', 'AO': 'üá¶üá¥', 'MZ': 'üá≤üáø',
    'ZW': 'üáøüáº', 'BW': 'üáßüáº', 'NA': 'üá≥üá¶', 'MU': 'üá≤üá∫', 'RE': 'üá∑üá™', 'MG': 'üá≤üá¨'
};

const countryNames = {
    'RU': '–†–æ—Å—Å–∏—è', 'US': '–°–®–ê', 'GB': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', 'DE': '–ì–µ—Ä–º–∞–Ω–∏—è', 'FR': '–§—Ä–∞–Ω—Ü–∏—è',
    'IT': '–ò—Ç–∞–ª–∏—è', 'ES': '–ò—Å–ø–∞–Ω–∏—è', 'UA': '–£–∫—Ä–∞–∏–Ω–∞', 'BY': '–ë–µ–ª–∞—Ä—É—Å—å', 'KZ': '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
    'CN': '–ö–∏—Ç–∞–π', 'JP': '–Ø–ø–æ–Ω–∏—è', 'KR': '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è', 'IN': '–ò–Ω–¥–∏—è', 'BR': '–ë—Ä–∞–∑–∏–ª–∏—è',
    'AU': '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', 'CA': '–ö–∞–Ω–∞–¥–∞', 'MX': '–ú–µ–∫—Å–∏–∫–∞', 'AR': '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', 'TR': '–¢—É—Ä—Ü–∏—è',
    'SA': '–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è', 'AE': '–û–ê–≠', 'IL': '–ò–∑—Ä–∞–∏–ª—å', 'EG': '–ï–≥–∏–ø–µ—Ç', 'ZA': '–Æ–ê–†',
    'NG': '–ù–∏–≥–µ—Ä–∏—è', 'KE': '–ö–µ–Ω–∏—è', 'TH': '–¢–∞–∏–ª–∞–Ω–¥', 'VN': '–í—å–µ—Ç–Ω–∞–º', 'PH': '–§–∏–ª–∏–ø–ø–∏–Ω—ã',
    'ID': '–ò–Ω–¥–æ–Ω–µ–∑–∏—è', 'MY': '–ú–∞–ª–∞–π–∑–∏—è', 'SG': '–°–∏–Ω–≥–∞–ø—É—Ä', 'PL': '–ü–æ–ª—å—à–∞', 'NL': '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã'
};

// Simplified timezone mapping by country
const countryTimezones = {
    'RU': 3, 'US': -5, 'GB': 0, 'DE': 1, 'FR': 1, 'IT': 1, 'ES': 1,
    'UA': 2, 'BY': 3, 'KZ': 6, 'CN': 8, 'JP': 9, 'KR': 9, 'IN': 5.5,
    'BR': -3, 'AU': 10, 'CA': -5, 'MX': -6, 'AR': -3, 'TR': 3, 'SA': 3,
    'AE': 4, 'IL': 2, 'EG': 2, 'ZA': 2, 'NG': 1, 'KE': 3, 'TH': 7,
    'VN': 7, 'PH': 8, 'ID': 7, 'MY': 8, 'SG': 8, 'PL': 1, 'NL': 1,
    'BE': 1, 'AT': 1, 'CH': 1, 'SE': 1, 'NO': 1, 'DK': 1, 'FI': 2,
    'PT': 0, 'GR': 2, 'CZ': 1, 'RO': 2, 'HU': 1, 'BG': 2, 'RS': 1,
    'HR': 1, 'SK': 1, 'SI': 1, 'LT': 2, 'LV': 2, 'EE': 2, 'IE': 0,
    'NZ': 12, 'CL': -3, 'CO': -5, 'PE': -5, 'VE': -4, 'EC': -5
};

// Initialize with + sign
phoneInput.value = '+';

function getLocalTime(countryCode) {
    const offset = countryTimezones[countryCode] || 0;
    const now = new Date();
    const utc = now.getTime() + (now.getTimezoneOffset() * 60000);
    const localTime = new Date(utc + (3600000 * offset));
    
    const hours = String(localTime.getHours()).padStart(2, '0');
    const minutes = String(localTime.getMinutes()).padStart(2, '0');
    
    return {
        time: `${hours}:${minutes}`,
        offset: offset >= 0 ? `UTC+${offset}` : `UTC${offset}`
    };
}

phoneInput.addEventListener('focus', function() {
    // –ö—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü –ø–æ—Å–ª–µ +
    if (phoneInput.value === '+') {
        setTimeout(() => {
            phoneInput.setSelectionRange(1, 1);
        }, 0);
    }
});

phoneInput.addEventListener('keydown', function(e) {
    // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ +
    if ((e.key === 'Backspace' || e.key === 'Delete') && phoneInput.value === '+') {
        e.preventDefault();
    }
});

phoneInput.addEventListener('input', function(e) {
    let value = e.target.value;
    
    // –í—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º + –≤ –Ω–∞—á–∞–ª–µ
    if (!value.startsWith('+')) {
        value = '+' + value.replace(/\+/g, '');
        phoneInput.value = value;
    }
    
    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ +, —Å–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (value === '+') {
        result.classList.add('hidden');
        errorDiv.classList.add('hidden');
        return;
    }
    
    try {
        const phoneNumber = libphonenumber.parsePhoneNumber(value);
        
        if (phoneNumber && phoneNumber.country) {
            const countryCode = phoneNumber.country;
            const flag = countryFlags[countryCode] || 'üåç';
            const country = countryNames[countryCode] || phoneNumber.country;
            const localTime = getLocalTime(countryCode);
            
            flagDiv.textContent = flag;
            countryDiv.textContent = country;
            timeDiv.textContent = localTime.time;
            timezoneDiv.textContent = localTime.offset;
            
            result.classList.remove('hidden');
            errorDiv.classList.add('hidden');
        } else {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É');
        }
    } catch (err) {
        if (value.length > 3) {
            errorDiv.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ –Ω–æ–º–µ—Ä—É';
            errorDiv.classList.remove('hidden');
            result.classList.add('hidden');
        } else {
            errorDiv.classList.add('hidden');
            result.classList.add('hidden');
        }
    }
});
